spring.application.name: order-service
server.port: 8082

spring.datasource:
  url: jdbc:mysql://localhost:3306/order_service
  username: root
  password: root

spring.jpa.hibernate.ddl-auto: update
eureka:
  client:
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka/ # Eureka server URL with credentials (username-> eureka, password->  password)

# Actuator configuration
management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    web:
      exposure:
        include: all
    health:
      show-details: always

# resilience4j configuration
resilience4j.circuitbreaker:
  instances:
    inventory:
      registerHealthIndicator: true # Enable health indicator for the circuit breaker
      sliding-window-type: COUNT_BASED # Use count-based sliding window.
      slidingWindowSize: 10 # Number of calls over which the circuit breaker calculates metrics like failure rate. The circuit breaker will evaluate the failure rate based on the last 10 calls.
      failureRateThreshold: 50 # Percentage of failures to trip the circuit breaker
      waitDurationInOpenState: 10000 # Time (in ms) to wait before transitioning from OPEN to HALF_OPEN state
      permitted-number-of-calls-in-half-open-state: 3 # Number of calls allowed in HALF_OPEN state to test if the service has recovered. If any of these calls fail, the circuit breaker transitions back to OPEN state.
      automatic-transition-from-open-to-half-open-enabled: true # Enable automatic transition from OPEN to HALF_OPEN state

# resilience4j timeout configuration (explains how long to wait for a response before timing out)
resilience4j.timelimiter:
  instances:
    inventory:
      timeoutDuration: 2s # Timeout duration of 2 seconds

# resilience4j retry configuration: how many times to retry a failed call before giving up
# It means that if a call to the inventory service fails, it will be retried up to 3 times with a wait duration of 500 milliseconds between each attempt.
resilience4j.retry:
  instances:
    inventory:
      max-attempts: 3 # Maximum number of retry attempts
      wait-duration: 500ms # Wait duration between retry attempts


spring:
  # zipkin configuration for distributed tracing
  zipkin:
    base-url: http://localhost:9411/

  # kafka configuration
  kafka:
    bootstrap-servers: localhost:9092 # Kafka broker address
    template:
      default-topic: notificationTopic # Default topic for sending messages
    producer: # Producer configuration
      key-serializer: org.apache.kafka.common.serialization.StringSerializer # Serializer for the message key.
      value-serializer: org.apache.kafka.common.serialization.JsonSerializer # Serializer for the message value.
      properties:
        spring.json.type.mappings: # Mapping for JSON serialization
          event: com.example.orderservice.event.OrderCreatedEvent